extends layout

block content
  .page-header
    h3 Chart.js
    button#addData Add Data

  canvas#csvChart

  canvas#dynamicChart
  script(src='https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js')
  script.
    //Globals
    var config_csv = {};

    makeChart(); // Chart 1: Uses data from a CSV
    async function makeChart() {
      const data = await getCSV(); //get CSV data first
      var ctx2 = document.getElementById('csvChart').getContext('2d');
      config_csv = {
        // The type of chart we want to create
        type: 'line',
        // The data for our dataset
        data: {
          labels: data.x_vals,
          datasets: [{
            label: 'Weight',
            yAxisID: 'Weight',
            backgroundColor: 'rgb(255, 99, 132)',
            borderColor: 'rgb(255, 99, 132)',
            data: data.y_weights,
            fill: false
          
          //- },
          //- {
          //-   label: 'Height',
          //-   yAxisID: 'Height',
          //-   backgroundColor: 'rgb(255, 0, 25)',
          //-   borderColor: 'rgb(255, 0, 25)',
          //-   data: data.y_heights,
          //-   fill: false
          }]
        },

        //Config options
        options: {
          responsive: true,
          title: {
              display: true,
              text: 'How does my weight change?'
          },
          tooltips: {
              mode: 'index',
              intersect: false,
          },
          hover: {
              mode: 'nearest',
              intersect: true
          },
          legend: {
            display: true,
            label: {
              fontColor: 'rgb(0, 0, 255)'
            }
          },
          scales: {
              yAxes: [{
                  id: 'Weight',
                  position: 'left',
                  scaleLabel: {
                    display: true,
                    labelString: 'Weight (kg)'
                  },
                  ticks: {
                      callback: function(value, index, values) {
                          return value + ' kg';
                      }
                  }
              
              //- }, {
              //-     id: 'Height',
              //-     position: 'Right',
              //-     scaleLabel: {
              //-       display: true,
              //-       labelString: 'Height (cm)'
              //-     },
              //-     ticks: {
              //-         callback: function(value, index, values) {
              //-             return value + ' cm';
              //-         }
              //-     }
              }],
              xAxes: [{
                scaleLabel: {
                  display: true,
                  labelString: 'Date (yyyy-mm-dd)'
                },
                ticks: {
                  major: {
                    fontStyle: 'bold',
                    fontColor: '#FF0000'
                  }
                }
              }]
          }
        }
      };
      var chart = new Chart(ctx2, config_csv);
      
    }

    //Read CSV data from file
    async function getCSV() {
        const x_vals = [];
        const y_weights = [];
        const y_heights = [];
        const response = await fetch("/test_csvs/base.csv"); //'root' (/) is public folder
        const data = await response.text();
        console.log(data);

        const rows = data.split('\n').slice(1);
        rows.forEach(input => {
          const row = input.split(',');
          const id = row[0];
          const date = row[1];
          const weight = row[2];
          const height = row[3];
          const bmi = row[4];
          if (date != undefined && weight != undefined && height != undefined) {
             x_vals.push(date); //For graph
            y_weights.push(weight);
            y_heights.push(height);
            console.log(date, weight, height, bmi); //can treat id as 'date' on x-axis for now
          } else {
            console.log('undefined values in csv');
          }
         
        });
        return {x_vals, y_weights, y_heights};
    }

    //Chart 2: Dynamic chart - i.e. can push data to it. No persistence on reload - no CSV.
    var config_bmi = {
        type: 'line',
        data: {
          labels: [],
          datasets: [{
              label: 'BMI',
              backgroundColor: 'rgb(0, 99, 132)',
              borderColor: 'rgb(0, 99, 132)',
              data: [],
              fill: false,
          }]
        },
        options: {
            responsive: true,
            title: {
                display: true,
                text: 'How does my BMI change?'
            },
            tooltips: {
                mode: 'index',
                intersect: false,
            },
            hover: {
                mode: 'nearest',
                intersect: true
            },
            scales: {
              yAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'BMI (kg/m2)'
                    }
                }],
                xAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Date (yyyy-mm-dd)'
                    }
                }]
          }
        }
    };

    //Handle loading data for Dynamic chart
    window.onload = function() {
      var ctx = document.getElementById('dynamicChart').getContext('2d');
      window.myLine = new Chart(ctx, config_bmi);
    };

    //Handle adding new data to Dynamic chart
    document.getElementById('addData').addEventListener('click', function() {
        //For every dataset on the Dynamic chart
        if (config_bmi.data.datasets.length > 0) {
            //Append x-val (date)
            var date = new Date().toISOString().slice(0, 10);
            config_bmi.data.labels.push(date);

            //Get and append y-val
            var val_to_append = 3;
            config_bmi.data.datasets.forEach(function(dataset) {
                dataset.data.push(val_to_append);
            });

            //Update BMI graph
            window.myLine.update();
        }
    });


  //- canvas#csvChart(width='400' height='400')
  //- //-'./node_modules/chart.js'
  //- script(type='text/javascript', src='https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js').
  //-   //- var Chart = require('chart.js');
  //-   var ctx = document.getElementById('csvChart').getContext('2d');
  //-   var csvChart = new Chart(ctx, {
  //-   type: 'bar',
  //-   data: {
  //-   labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
  //-   datasets: [{
  //-   label: '# of Votes',
  //-   data: [12, 19, 3, 5, 2, 3],
  //-   backgroundColor: [
  //-   'rgba(255, 99, 132, 0.2)',
  //-   'rgba(54, 162, 235, 0.2)',
  //-   'rgba(255, 206, 86, 0.2)',
  //-   'rgba(75, 192, 192, 0.2)',
  //-   'rgba(153, 102, 255, 0.2)',
  //-   'rgba(255, 159, 64, 0.2)'
  //-   ],
  //-   borderColor: [
  //-   'rgba(255, 99, 132, 1)',
  //-   'rgba(54, 162, 235, 1)',
  //-   'rgba(255, 206, 86, 1)',
  //-   'rgba(75, 192, 192, 1)',
  //-   'rgba(153, 102, 255, 1)',
  //-   'rgba(255, 159, 64, 1)'
  //-   ],
  //-   borderWidth: 1
  //-   }]
  //-   },
  //-   options: {
  //-   scales: {
  //-   yAxes: [{
  //-   ticks: {
  //-   beginAtZero: true
  //-   }
  //-   }]
  //-   }
  //-   }
  //-   });